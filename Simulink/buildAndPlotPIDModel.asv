% buildAndPlotPIDModel.m
% Creates, simulates, and plots a PID-controlled aircraft model

%% === Step 1: Create and Build the Simulink Model ===
modelName = 'PIDControlAircraft';
new_system(modelName);
open_system(modelName);

% Layout positions
x = 30; y = 30; dx = 120; dy = 80;

% Add Blocks
add_block('simulink/Sources/Constant', [modelName '/Setpoint'], ...
    'Value', '10', ...
    'Position', [x y x+30 y+30]);

add_block('simulink/User-Defined Functions/S-Function', [modelName '/PIDControllerS'], ...
    'FunctionName', 'PIDControllerS', ...
    'Position', [x+2*dx y x+2*dx+80 y+60]);

add_block('simulink/Commonly Used Blocks/Gain', [modelName '/Gain_1_I'], ...
    'Gain', '1/5', ...
    'Position', [x+3*dx y x+3*dx+50 y+30]);

add_block('simulink/Continuous/Integrator', [modelName '/Integrator_omega'], ...
    'Position', [x+4*dx y x+4*dx+40 y+30]);

add_block('simulink/Continuous/Integrator', [modelName '/Integrator_theta'], ...
    'Position', [x+5*dx y x+5*dx+40 y+30]);

add_block('simulink/Sinks/Scope', [modelName '/Scope'], ...
    'Position', [x+6*dx y x+6*dx+50 y+30]);

% Connect Blocks
add_line(modelName, 'Setpoint/1', 'PIDControllerS/1');
add_line(modelName, 'Integrator_theta/1', 'PIDControllerS/2');
add_line(modelName, 'PIDControllerS/1', 'Gain_1_I/1');
add_line(modelName, 'Gain_1_I/1', 'Integrator_omega/1');
add_line(modelName, 'Integrator_omega/1', 'Integrator_theta/1');
add_line(modelName, 'Integrator_theta/1', 'Scope/1');

% Enable signal logging on the final output line
scopeLine = get_param([modelName '/Integrator_theta'], 'LineHandles');
outputLine = scopeLine.Outport;
set_param(outputLine, 'DataLogging', 'on');

% Save model
save_system(modelName);
disp('âœ… Simulink model created and signal logging enabled.');

%% === Step 2: Simulate the Model ===
simOut = sim(modelName);

%% === Step 3: Plot the Logged Output ===
if isfield(simOut, 'logsout') && simOut.logsout.numElements > 0
    signal = simOut.logsout.getElement(1);
    time = signal.Values.Time;
    data = signal.Values.Data;

    figure;
    plot(time, data, 'LineWidth', 2);
    xlabel('Time (s)');
    ylabel('Angle (deg)');
    title('PID-Controlled Aircraft Angle Response');
    grid on;
else
    error('No logged signals found. Make sure signal logging is enabled.');
end
